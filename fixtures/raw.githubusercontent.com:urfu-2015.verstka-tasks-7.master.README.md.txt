# Задача к лекции «Flex» – «Бабуленькины котятки»

:sos: [Как создать Pull Request](https://github.com/urfu-2015/guides/blob/master/how-to-pull-request.md)  
:warning: [Codestyle для HTML](https://github.com/urfu-2015/guides/blob/master/html-codestyle.md)  
:warning: [Codestyle для CSS](https://github.com/urfu-2015/guides/blob/master/css-codestyle.md)  
:warning: При создании PullRequest'а не забудьте указать ваши имя и фамилию.

### Общие требования

Мы очень хотим, чтобы код вы написали сами на чистом CSS и HTML, а __не пользовались внешними библиотеками, пост и препроцессорами__.

Прежде чем отправлять решение, проверьте его на соответствие [требованиям к HTML коду](https://github.com/urfu-2015/guides/blob/master/html-codestyle.md)   
и [требованиям к CSS](https://github.com/urfu-2015/guides/blob/master/css-codestyle.md).

Когда вы создадите или обновите пулл-реквест, он частично будет проверен
автоматически. Результаты вы увидите внизу:

Если всё хорошо:  
<img width="308" alt="2015-10-08_1845" src="https://cloud.githubusercontent.com/assets/4534405/10368030/ccc43228-6dec-11e5-925e-47793862d13e.png">

Если всё плохо:  
<img width="218" alt="2015-10-08_1841" src="https://cloud.githubusercontent.com/assets/4534405/10367916/60487fc8-6dec-11e5-9e1d-2a1b15da2220.png">

Проверить HTML и CSS можно и вручную:
```sh
# Устанавливаем проверяльщик
npm install

# Проверяем
npm test

# В результате выведутся ошибки, если они есть.
# Если какие-либо ошибки будут не понятны – смело спрашиваем у ментора.
```

В помощь вам мы разместили файл `.editorconfig`. Этот файл содержит базовые
правила оформления кода (codestyle), понятные для большинства редакторов.
Прочитайте [о нём подробнее](https://github.com/urfu-2015/guides/blob/master/editorconfig.md).

### Задача

Благодаря «Мяндекс.Муррркет» бабуленькины котятки продаются на ура! Всё больше
людей приобретают маленькие пушистые комочки тепла и уюта в свои дома.

Настало время улучшить наш интернет-магазин и сверстать к нему красивую «витрину».
<a href="https://cloud.githubusercontent.com/assets/4534405/11119772/ad7e45c4-896d-11e5-8263-a76fd636c7d5.png" target="_blank"><img src="https://cloud.githubusercontent.com/assets/4534405/11119772/ad7e45c4-896d-11e5-8263-a76fd636c7d5.png" width="400"></a>

На макете слева выводится меню по породам котиков, по центру – карточки котиков,
а справа рейтинг пород котиков (породы выводятся по алфавиту).

Подвал должен быть прибит к нижней границе окна браузера, если котики влезают
в один экран.

Фотки котиков должны располагаться строго по шаблону, указанному в макете.
(если фоток больше 8, то шаблон повторяется).

Левая колонка с меню всегда подстраивается под высоту контейнера с фотками,
а правая (рейтинг) - по контенту внтури нее.

Для вёрстки необходимо использовать __Flex__!

Помимо вёрстки, давайте обогатим макет следующими возможностями:

* Возможость сортировки рейтинга по убыванию баллов при помощи чекбокса
* Возможность выбрать породу в меню и отфильтровать котиков только этой породы
* По наведению на фотку котика, выводить плашку с именем и возрастом котика
* Цвет рейтинга должен зависеть от его значения

__Задание необходимо решить без использования JS и с использованием Flex__

### Необязательное задание (+10 к гибкости)

Если гибкие коробки вам по плечу, то вы наверняка сможете реализовать всё при
помощи __CSS3 Grid__.

__Дополнительное задание необходимо решить без использования JS__

<img width="100%" src="https://cloud.githubusercontent.com/assets/4534405/11119376/da00ff4a-896a-11e5-9e83-bf94f0429635.jpg" title="Гибкие коробки как они есть">

:warning: При написании этого задания, ни один котик не остался без молочка.
